# Based on https://www.digitalocean.com/community/tutorials/how-to-forward-ports-through-a-linux-gateway-with-iptables 
# Steps to reproduce
# 1. update /etc/sysctl.conf or /etc/sysctl.d/something.conf with the line
# .  net.ipv4.ip_forward=1
# 1. Reload new setting with 
# .  sysctl -p
# .  sysctl --system
# 1. Load this iptables rules 
# .  iptables-restore < /etc/iptables.rule 
# 1. Create a routing table in AWS which redirects all traffic destined for the target IP range to the gateway 
# 1. The gateway should recieve the traffic and send it to the DB
#
# Generated by iptables-save v1.8.4 on Fri Feb 11 00:35:01 2022
#
# THE FOLLOWING WORKS TO REDIRECT TRAFFIC TO THE REDIS DB IF THE CLIENT
# CONNECTS TO 6379 ON THIS HOST
#
# ALSO SEEMS TO WORK WITH THE CLIENT ADDRESSING THE DB BUT THE ROUTE TABLE
# SENDING TRAFFIC THROUGH THE GW
#
# To test use tcset --direction outgoing --dst-network 10.0.2.0/24 --delay 1000ms eth0
#
*nat
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:OUTPUT ACCEPT [3:222]
:POSTROUTING ACCEPT [3:222]
-A PREROUTING -p tcp -m tcp --dport 6379 -j DNAT --to-destination 10.0.2.96
-A POSTROUTING -d 10.0.2.96/32 -p tcp -m tcp --dport 6379 -j SNAT --to-source 10.0.102.33
COMMIT
# Completed on Fri Feb 11 00:35:01 2022
# Generated by iptables-save v1.8.4 on Fri Feb 11 00:35:01 2022
*filter
:INPUT ACCEPT [1413:336582]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [1701:291419]
-A FORWARD -p tcp -m tcp --dport 6379 --tcp-flags FIN,SYN,RST,ACK SYN -m conntrack --ctstate NEW -j ACCEPT
-A FORWARD -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
COMMIT
# Completed on Fri Feb 11 00:35:01 2022
